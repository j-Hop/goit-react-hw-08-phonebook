{"version":3,"file":"static/js/565.58864e86.chunk.js","mappings":"iOAsKA,UAhKkB,WAChB,IAAMA,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9BC,GAAWC,EAAAA,EAAAA,MAajB,OAAIJ,GAAwB,SAAC,KAAD,CAAUK,GAAG,eAIvC,4BACE,wBAAI,6BACJ,UAAC,IAAD,CACEC,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,MAAO,CACLC,SAAU,KAEZC,cAAe,CACbC,UAAU,GAEZC,aAAa,MACbC,SAzBW,SAAAC,GACfb,GAASc,EAAAA,EAAAA,IAAUD,GACpB,EAQG,WAiBE,SAAC,SAAD,CACEE,MAAM,QACNZ,KAAK,QACLa,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCANf,UAUE,SAAC,IAAD,OAMF,SAAC,SAAD,CACEH,MAAM,WACNZ,KAAK,WACLgB,UAAW,EACXH,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCAPf,UAWE,SAAC,aAAD,OAGF,SAAC,SAAD,CACEZ,WAAY,CACVc,OAAQ,EACRf,KAAM,IAHV,UAME,SAAC,KAAD,CAAQgB,KAAK,UAAUC,SAAS,SAAhC,SAAyC,mBAmFlD,C","sources":["page/LoginPage/LoginPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { loginUser } from 'redux/authentificated/operations';\nimport { selectAuthentificated } from 'redux/authentificated/authSelectors';\nimport { Button, Form, Input } from 'antd';\n// import css from './Login.module.css';\nconst LoginPage = () => {\n  const authentificated = useSelector(selectAuthentificated);\n\n  const dispatch = useDispatch();\n  // const handleSabmitLogin = e => {\n  //   e.preventDefault();\n  //   const form = e.currentTarget;\n  //   const email = form.userEmail.value;\n  //   const password = form.userPassword.value;\n  //   dispatch(loginUser({ email, password }));\n  //   form.reset();\n  // };\n  const onFinish = values => {\n    dispatch(loginUser(values));\n  };\n\n  if (authentificated) return <Navigate to=\"/contacts\" />;\n\n  // const {  Button, Checkbox, Form, Input  } = antd;\n  return (\n    <div>\n      <h1>Login Into Your Account</h1>\n      <Form\n        name=\"basic\"\n        labelCol={{\n          span: 8,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n        style={{\n          maxWidth: 600,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        autoComplete=\"off\"\n        onFinish={onFinish}\n      >\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your username!',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        {/* <Input name=\"userEmail\" type=\"email\" required /> */}\n\n        {/* <label> */}\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          minLength={7}\n          rules={[\n            {\n              required: true,\n              message: 'Please input your password!',\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        {/* </label> */}\n        <Form.Item\n          wrapperCol={{\n            offset: 8,\n            span: 16,\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\">\n            Sing in\n          </Button>\n        </Form.Item>\n        {/* <Button type=\"submit\">Sing in</Button> */}\n      </Form>\n    </div>\n\n    // const onFinish = (values) => {\n    //   console.log('Success:', values);\n    // };\n    // const onFinishFailed = (errorInfo) => {\n    //   console.log('Failed:', errorInfo);\n    // };\n    // const App = () => (\n    //   <Form\n    //     name=\"basic\"\n    //     labelCol={{\n    //       span: 8,\n    //     }}\n    //     wrapperCol={{\n    //       span: 16,\n    //     }}\n    //     style={{\n    //       maxWidth: 600,\n    //     }}\n    //     initialValues={{\n    //       remember: true,\n    //     }}\n    //     onFinish={onFinish}\n    //     onFinishFailed={onFinishFailed}\n    //     autoComplete=\"off\"\n    //   >\n    // <Form.Item\n    //   label=\"Username\"\n    //   name=\"username\"\n    //   rules={[\n    //     {\n    //       required: true,\n    //       message: 'Please input your username!',\n    //     },\n    //   ]}\n    // >\n    //   <Input />\n    // </Form.Item>\n\n    // <Form.Item\n    //   label=\"Password\"\n    //   name=\"password\"\n    //   rules={[\n    //     {\n    //       required: true,\n    //       message: 'Please input your password!',\n    //     },\n    //   ]}\n    // >\n    //   <Input.Password />\n    // </Form.Item>\n\n    // <Form.Item\n    //   name=\"remember\"\n    //   valuePropName=\"checked\"\n    //   wrapperCol={{\n    //     offset: 8,\n    //     span: 16,\n    //   }}\n    // >\n    //   <Checkbox>Remember me</Checkbox>\n    // </Form.Item>\n\n    //     <Form.Item\n    //       wrapperCol={{\n    //         offset: 8,\n    //         span: 16,\n    //       }}\n    //     >\n    //       <Button type=\"primary\" htmlType=\"submit\">\n    //         Submit\n    //       </Button>\n    //     </Form.Item>\n    //   </Form>\n    // );\n  );\n};\n\nexport default LoginPage;\n"],"names":["authentificated","useSelector","selectAuthentificated","dispatch","useDispatch","to","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","autoComplete","onFinish","values","loginUser","label","rules","required","message","minLength","offset","type","htmlType"],"sourceRoot":""}