{"version":3,"file":"static/js/191.26afdbe3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactLIst/Contact.module.css?69b0","components/ContactLIst/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","page/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"button\":\"ContactForm_button__eSwX9\"};","export const selectContacts = state => state.contactsStorage.contacts.items;\nexport const selectIsLoading = state =>\n  state.contactsStorage.contacts.isLoading;\nexport const selectError = state => state.contactsStorage.contacts.error;\nexport const selectFilter = state => state.contactsStorage.filter;\n","// import PropTypes from 'prop-types';\n// import { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/authentificated/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n// import { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handelInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setPhone(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onAddContact = contactData => {\n    const comparison = contacts.find(\n      el => contactData.name.toLowerCase() === el.name.toLowerCase()\n    );\n\n    if (comparison) {\n      alert(`${contactData.name} is already in contacts!`);\n      return;\n    }\n\n    const contact = {\n      ...contactData,\n    };\n    dispatch(addContact(contact));\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    onAddContact({ name, number });\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handelSubmit}>\n      <span>Name</span>\n      <label className={css.label}>\n        <input\n          placeholder=\"Please enter a name\"\n          onChange={handelInputChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <span>Phone</span>\n      <label>\n        <input\n          placeholder=\"Please enter a number\"\n          onChange={handelInputChange}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"Contact_items__rFta-\"};","// import PropTypes from 'prop-types';\nimport css from './Contact.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { useCallback, useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/authentificated/operations';\nimport { selectAuthentificated } from 'redux/authentificated/authSelectors';\n// import { deleteContact, fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const authentificated = useSelector(selectAuthentificated);\n\n  const dispatch = useDispatch();\n\n  const getApiContacts = useCallback(\n    () => dispatch(fetchContacts()),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (!authentificated) return;\n    getApiContacts();\n  }, [getApiContacts, authentificated]);\n\n  const onRemoveContact = contactId => dispatch(deleteContact(contactId));\n\n  const getFilteredContacts = () => {\n    return contacts?.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const visible = getFilteredContacts();\n\n  if (!visible.length) return null;\n\n  return (\n    <ul className={css.list}>\n      {getFilteredContacts().map(({ id, name, number }) => {\n        return (\n          <li className={css.items} key={id}>\n            <p>{name} </p>\n            <p>: {number}</p>\n            <button type=\"button\" onClick={() => onRemoveContact(id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","// import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsStorageReducer';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={css.filter}>\n      <input\n        placeholder=\"Contact search\"\n        className={css.input}\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n      />\n    </label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactLIst/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <div>\n      {' '}\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      {isLoading && !error && <Loader />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contactsStorage","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactForm","useState","name","setName","number","setPhone","useSelector","dispatch","useDispatch","handelInputChange","e","target","value","className","css","onSubmit","preventDefault","contactData","find","el","toLowerCase","alert","contact","addContact","onAddContact","placeholder","onChange","type","pattern","title","required","ContactList","authentificated","selectAuthentificated","getApiContacts","useCallback","fetchContacts","useEffect","getFilteredContacts","includes","length","map","id","onClick","contactId","deleteContact","Filter","setFilter","Loader"],"sourceRoot":""}